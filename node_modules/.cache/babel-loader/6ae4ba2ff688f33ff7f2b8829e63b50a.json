{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/Exchanges.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useGetCryptoHExchangeQuery } from \"../services/cryptoApi\";\nimport { Avatar, Col, Row, Typography } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exchanges = () => {\n  _s();\n\n  var _cryptoExchange$stats, _cryptoExchange$stats2, _cryptoExchange$stats3, _cryptoExchange$excha;\n\n  const [exchanges, setExchanges] = useState([]);\n  const {\n    data: exchangeList,\n    isFetching\n  } = useGetCryptoHExchangeQuery(exchanges);\n  const cryptoExchange = exchangeList === null || exchangeList === void 0 ? void 0 : exchangeList.data;\n  if (isFetching) return \"Loading..\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"5%\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"5%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 2,\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [100, 50],\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 4,\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: cryptoExchange === null || cryptoExchange === void 0 ? void 0 : (_cryptoExchange$stats = cryptoExchange.stats) === null || _cryptoExchange$stats === void 0 ? void 0 : _cryptoExchange$stats.volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 4,\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: cryptoExchange === null || cryptoExchange === void 0 ? void 0 : (_cryptoExchange$stats2 = cryptoExchange.stats) === null || _cryptoExchange$stats2 === void 0 ? void 0 : _cryptoExchange$stats2.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 4,\n          children: \"Limit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: cryptoExchange === null || cryptoExchange === void 0 ? void 0 : (_cryptoExchange$stats3 = cryptoExchange.stats) === null || _cryptoExchange$stats3 === void 0 ? void 0 : _cryptoExchange$stats3.limit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"5%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 2,\n        children: \"Exchanges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      children: cryptoExchange === null || cryptoExchange === void 0 ? void 0 : (_cryptoExchange$excha = cryptoExchange.exchanges) === null || _cryptoExchange$excha === void 0 ? void 0 : _cryptoExchange$excha.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"5%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n            level: 2,\n            children: data === null || data === void 0 ? void 0 : data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            src: data === null || data === void 0 ? void 0 : data.iconUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          dangerouslySetInnerHTML: {\n            __html: data.description\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, data.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Exchanges, \"fH7SpP/xCvLySoqZmf64SN3CrMA=\", false, function () {\n  return [useGetCryptoHExchangeQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/Exchanges.jsx"],"names":["React","useState","useGetCryptoHExchangeQuery","Avatar","Col","Row","Typography","HTMLReactParser","Exchanges","exchanges","setExchanges","data","exchangeList","isFetching","cryptoExchange","padding","textAlign","marginBottom","stats","volume","total","limit","map","display","gridTemplateColumns","name","iconUrl","__html","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useGetCryptoHExchangeQuery } from \"../services/cryptoApi\";\nimport { Avatar, Col, Row, Typography } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nconst Exchanges = () => {\n  const [exchanges, setExchanges] = useState([]);\n  const { data: exchangeList, isFetching } =\n    useGetCryptoHExchangeQuery(exchanges);\n  const cryptoExchange = exchangeList?.data;\n  if (isFetching) return \"Loading..\";\n\n  return (\n    <div style={{ padding: \"5%\", textAlign: \"center\" }}>\n      <div style={{ marginBottom: \"5%\" }}>\n        <Typography.Title level={2}>Statistics</Typography.Title>\n      </div>\n      <Row gutter={[100, 50]} justify=\"center\">\n        <Col>\n          <Typography.Title level={4}>Volume</Typography.Title>\n          <Typography.Text>{cryptoExchange?.stats?.volume}</Typography.Text>\n        </Col>\n        <Col>\n          <Typography.Title level={4}>Total</Typography.Title>\n          <Typography.Text>{cryptoExchange?.stats?.total}</Typography.Text>\n        </Col>\n        <Col>\n          <Typography.Title level={4}>Limit</Typography.Title>\n          <Typography.Text>{cryptoExchange?.stats?.limit}</Typography.Text>\n        </Col>\n      </Row>\n      <div style={{ padding: \"5%\"}}>\n        <Typography.Title level={2}>Exchanges</Typography.Title>\n      </div>\n      <Row gutter={[32, 32]}>\n        {cryptoExchange?.exchanges?.map((data) => (\n          <div\n            key={data.name}\n            style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", padding: \"5%\" }}\n          >\n            <div>\n              <Typography.Title level={2}>{data?.name}</Typography.Title>\n              <Avatar src={data?.iconUrl} />\n            </div>\n            <div style={{textAlign: \"center\"}} dangerouslySetInnerHTML={{ __html:(data.description) }} />\n          </div>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}