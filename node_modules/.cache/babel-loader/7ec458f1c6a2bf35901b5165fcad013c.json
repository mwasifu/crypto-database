{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport LineChart from \"./LineChart\";\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _coinDetail$data, _cryptoDetails$allTim;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data: coinDetail,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const {\n    data: coinHistory\n  } = useGetCryptoHistoryQuery(coinId, timePeriod);\n  const cryptoDetails = coinDetail === null || coinDetail === void 0 ? void 0 : (_coinDetail$data = coinDetail.data) === null || _coinDetail$data === void 0 ? void 0 : _coinDetail$data.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  const stats = [{\n    title: \"Price in USD\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.price) && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Rank\",\n    value: cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 56\n    }, this)\n  }, {\n    title: \"24h Volume\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.volume) && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Market Cap\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.marketCap) && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"All Time High\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : (_cryptoDetails$allTim = cryptoDetails.allTimeHigh) === null || _cryptoDetails$allTim === void 0 ? void 0 : _cryptoDetails$allTim.price) && millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }];\n  const genericStats = [{\n    title: \"Number Of Markets\",\n    value: cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Number Of Exchanges\",\n    value: cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Approved Supply\",\n    value: (cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.approvedSupply) ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Total Supply\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.totalSupply) && millify(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Circulating Supply\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.circulatingSupply) && millify(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }];\n  if (isFetching) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(Col, {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: cryptoDetails.iconUrl,\n            style: {\n              margin: \"2%\",\n              height: \"7vh\",\n              width: \"7vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            style: {\n              fontWeight: \"200\"\n            },\n            children: [cryptoDetails.name, \" (\", cryptoDetails.slug, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {},\n            children: [cryptoDetails.name, \" Live Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"7d\",\n            placeholder: \"Select Time Period\",\n            onChange: value => setTimePeriod(value),\n            style: {\n              marginTop: \"2%\"\n            },\n            children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            coinHistory: cryptoDetails.coinHistory,\n            currentPrice: millify(cryptoDetails.price),\n            coinName: cryptoDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), stats.map(_ref => {\n          let {\n            icon,\n            title,\n            value\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              alignItems: \"center\",\n              display: \"inline-grid\",\n              padding: \"2%\",\n              paddingTop: \"5%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: \"grey\",\n                  textAlign: \"center\",\n                  fontSize: \"1rem\"\n                },\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  fontWeight: \"bold\",\n                  color: \"#797ef6\"\n                },\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), genericStats.map(_ref2 => {\n          let {\n            icon,\n            title,\n            value\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              alignItems: \"center\",\n              display: \"inline-grid\",\n              padding: \"2%\",\n              paddingTop: \"5%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: \"grey\",\n                  textAlign: \"center\",\n                  fontSize: \"1rem\"\n                },\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  fontWeight: \"bold\",\n                  color: \"#ffa500\"\n                },\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            marginTop: \"4%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: [\"What is \", cryptoDetails.name, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: \"light\",\n                margin: \"0 18% 0 18%\",\n                padding: \"3%\",\n                textAlign: \"left\"\n              },\n              children: HTMLReactParser(cryptoDetails.description)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          children: [cryptoDetails.name, \" links\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), cryptoDetails.links.map(link => /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          style: {\n            margin: \"1%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 5,\n            children: link.type\n          }, link.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: link.url,\n              children: link.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"Vhc0hgzQR5yKHwhCR/vBRTt5KEg=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","Avatar","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","LineChart","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","coinDetail","isFetching","coinHistory","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","textAlign","iconUrl","margin","height","width","fontWeight","name","slug","marginTop","map","date","alignItems","display","padding","paddingTop","color","fontSize","description","links","link","type","url"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport LineChart from \"./LineChart\";\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data: coinDetail, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery(coinId, timePeriod)\n  const cryptoDetails = coinDetail?.data?.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price in USD\",\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${\n        cryptoDetails?.marketCap && millify(cryptoDetails.marketCap)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All Time High\",\n      value: `$ ${\n        cryptoDetails?.allTimeHigh?.price &&\n        millify(cryptoDetails.allTimeHigh.price)\n      }`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails?.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails?.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Approved Supply\",\n      value: cryptoDetails?.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${\n        cryptoDetails?.totalSupply && millify(cryptoDetails?.totalSupply)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${\n        cryptoDetails?.circulatingSupply &&\n        millify(cryptoDetails?.circulatingSupply)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  if (isFetching) return \"Loading...\";\n\n  return (\n    <Col style={{ textAlign: \"center\" }}>\n      <Col>\n        <div>\n          <div style={{ textAlign: \"center\" }}>\n            <Avatar\n              src={cryptoDetails.iconUrl}\n              style={{ margin: \"2%\", height: \"7vh\", width: \"7vh\" }}\n            />\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <Title level={2} style={{ fontWeight: \"200\" }}>\n              {cryptoDetails.name} ({cryptoDetails.slug})\n            </Title>\n          </div>\n\n          <div style={{ textAlign: \"center\" }}>\n            <p style={{}}>{cryptoDetails.name} Live Statistics</p>\n            <Select\n              defaultValue=\"7d\"\n              placeholder=\"Select Time Period\"\n              onChange={(value) => setTimePeriod(value)}\n              style={{ marginTop: \"2%\" }}\n            >\n              {time.map((date) => (\n                <Option key={date}>{date}</Option>\n              ))}\n            </Select>\n            <LineChart coinHistory={cryptoDetails.coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name}/>\n          </div>\n          {stats.map(({ icon, title, value }) => (\n            <div\n              style={{\n                alignItems: \"center\",\n                display: \"inline-grid\",\n                padding: \"2%\",\n                paddingTop: \"5%\",\n              }}\n            >\n              <div>\n                <Text>{icon}</Text>\n                <br />\n                <Text\n                  style={{\n                    color: \"grey\",\n                    textAlign: \"center\",\n                    fontSize: \"1rem\",\n                  }}\n                >\n                  {title}\n                </Text>\n              </div>\n              <div>\n                <Text style={{ fontWeight: \"bold\", color: \"#797ef6\" }}>\n                  {value}\n                </Text>\n              </div>\n            </div>\n          ))}\n          <br />\n          {genericStats.map(({ icon, title, value }) => (\n            <Col\n              style={{\n                alignItems: \"center\",\n                display: \"inline-grid\",\n                padding: \"2%\",\n                paddingTop: \"5%\",\n              }}\n            >\n              <div>\n                <Text>{icon}</Text>\n                <br />\n                <Text\n                  style={{\n                    color: \"grey\",\n                    textAlign: \"center\",\n                    fontSize: \"1rem\",\n                  }}\n                >\n                  {title}\n                </Text>\n              </div>\n              <div>\n                <Text style={{ fontWeight: \"bold\", color: \"#ffa500\" }}>\n                  {value}\n                </Text>\n              </div>\n            </Col>\n          ))}\n          <Col style={{marginTop: \"4%\"}}>\n            <Row justify=\"center\">\n              <Title level={3} style={{ textAlign: \"center\" }}>What is {cryptoDetails.name}?</Title>\n              <p style={{ fontWeight: \"light\", margin: \"0 18% 0 18%\", padding: \"3%\", textAlign: \"left\"}}>{HTMLReactParser(cryptoDetails.description)}</p>\n            </Row>\n          </Col>\n          <br />\n          <Title level={3}>{cryptoDetails.name} links</Title>\n          <br />\n          {cryptoDetails.links.map((link) => (\n              \n              <Row justify=\"center\" style={{margin: \"1%\"}}>\n                  <Title level={5} key={link.name}>{link.type}</Title>\n                  \n                  <Title level={3}><a href={link.url}>{link.name}</a></Title>\n              </Row>\n              \n          ))}\n        </div>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}