{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = _ref => {\n  _s();\n\n  var _cryptosList$data;\n\n  let {\n    simplified\n  } = _ref;\n  const count = simplified ? 10 : 100;\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n  console.log(cryptos);\n  if (isFetching) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search\",\n        onChange: e => e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      children: cryptos === null || cryptos === void 0 ? void 0 : cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        s: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${currency.iconUrl}`,\n              alt: \"crypto icon\",\n              style: {\n                height: \"4vh\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 24\n            }, this),\n            hoverable: true,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Market Cap: \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Daily Change: \", millify(currency.change), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cryptocurrencies, \"hVeP1R7qfBQ/5MFrwV0I+buoFtI=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/Cryptocurrencies.jsx"],"names":["React","useState","millify","Link","Card","Row","Col","Input","useGetCryptosQuery","Cryptocurrencies","simplified","count","data","cryptosList","isFetching","cryptos","setCryptos","coins","console","log","e","target","value","map","currency","id","rank","name","iconUrl","height","price","marketCap","change"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,MAAtC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;;;AAEA,MAAMC,gBAAgB,GAAG,QAAkB;AAAA;;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AACvC,QAAMC,KAAK,GAAGD,UAAU,GAAE,EAAF,GAAO,GAA/B;AACF,QAAM;AAAEE,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA;AAArB,MAAoCN,kBAAkB,CAACG,KAAD,CAA5D;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACY,WAAD,aAACA,WAAD,4CAACA,WAAW,CAAED,IAAd,sDAAC,kBAAmBK,KAApB,CAAtC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,MAAID,UAAJ,EAAgB,OAAO,YAAP;AAEhB,sBACE;AAAA,4BACA;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC,QAAnB;AAA4B,QAAA,QAAQ,EAAGM,CAAD,IAAOA,CAAC,CAACC,MAAF,CAASC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,gBACGP,OADH,aACGA,OADH,uBACGA,OAAO,CAAEQ,GAAT,CAAcC,QAAD,iBACZ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,CAAC,EAAE,EAAhB;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,QAAQ,CAACC,EAAG,EAAjC;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,KAAK,EAAG,GAAED,QAAQ,CAACE,IAAK,KAAIF,QAAQ,CAACG,IAAK,EAD5C;AAEE,YAAA,KAAK,eAAE;AAAK,cAAA,GAAG,EAAG,GAAEH,QAAQ,CAACI,OAAQ,EAA9B;AAAiC,cAAA,GAAG,EAAC,aAArC;AAAmD,cAAA,KAAK,EAAE;AAACC,gBAAAA,MAAM,EAAE;AAAT;AAA1D;AAAA;AAAA;AAAA;AAAA,oBAFT;AAGE,YAAA,SAAS,MAHX;AAAA,oCAKE;AAAA,oCAAW3B,OAAO,CAACsB,QAAQ,CAACM,KAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,yCAAgB5B,OAAO,CAACsB,QAAQ,CAACO,SAAV,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA,2CAAkB7B,OAAO,CAACsB,QAAQ,CAACQ,MAAV,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAgCR,QAAQ,CAACC,EAAzC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAwBD,CAhCD;;GAAMhB,gB;UAEsCD,kB;;;KAFtCC,gB;AAkCN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nconst Cryptocurrencies = ({simplified}) => {\n    const count = simplified? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n  console.log(cryptos);\n\n  if (isFetching) return 'Loading...';\n\n  return (\n    <>\n    <div>\n        <Input placeholder=\"Search\" onChange={(e) => e.target.value}/>\n    </div>\n      <Row gutter={[32, 32]}>\n        {cryptos?.map((currency) => (\n          <Col xs={24} s={12} lg={6} key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img src={`${currency.iconUrl}`} alt=\"crypto icon\" style={{height: \"4vh\"}}/>}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n"]},"metadata":{},"sourceType":"module"}