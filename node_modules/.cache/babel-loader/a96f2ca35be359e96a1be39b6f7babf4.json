{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _coinDetail$data;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data: coinDetail,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = coinDetail === null || coinDetail === void 0 ? void 0 : (_coinDetail$data = coinDetail.data) === null || _coinDetail$data === void 0 ? void 0 : _coinDetail$data.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  const stats = [{\n    title: 'Price to USD',\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 103\n    }, this)\n  }, {\n    title: 'Rank',\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 55\n    }, this)\n  }, {\n    title: '24h Volume',\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 103\n    }, this)\n  }, {\n    title: 'Market Cap',\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 109\n    }, this)\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 105\n    }, this)\n  }];\n  const genericStats = [{\n    title: 'Number Of Markets',\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 79\n    }, this)\n  }, {\n    title: 'Number Of Exchanges',\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 83\n    }, this)\n  }, {\n    title: 'Aprroved Supply',\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 71\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 91\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 115\n    }, this)\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 86\n    }, this)\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 98\n    }, this)\n  }];\n  if (isFetching) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: cryptoDetails.iconUrl,\n            style: {\n              margin: \"2%\",\n              height: \"7vh\",\n              width: \"7vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            style: {\n              fontWeight: \"200\"\n            },\n            children: [cryptoDetails.name, \" (\", cryptoDetails.slug, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {},\n            children: [cryptoDetails.name, \" Live Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"7d\",\n            placeholder: \"Select Time Period\",\n            onChange: value => setTimePeriod(value),\n            children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"I8hcV24F9sBw71jqZPwxqPU4VFc=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","Avatar","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","coinDetail","isFetching","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","textAlign","iconUrl","margin","height","width","fontWeight","name","slug","map","date"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data: coinDetail, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = coinDetail?.data?.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  if (isFetching) return \"Loading...\";\n  return (\n    <Col>\n      <Col>\n        <div>\n         \n            <div style={{ textAlign: \"center\"}}>\n              <Avatar\n                src={cryptoDetails.iconUrl}\n                style={{ margin: \"2%\", height: \"7vh\", width: \"7vh\" }}\n              />\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              <Title level={2} style={{ fontWeight: \"200\" }}>\n                {cryptoDetails.name} ({cryptoDetails.slug})\n              </Title>\n            </div>\n    \n\n          <div style={{textAlign: \"center\"}}>\n            <p style={{}}>{cryptoDetails.name} Live Statistics</p>  \n            <Select defaultValue=\"7d\" placeholder=\"Select Time Period\" onChange={(value) => setTimePeriod(value)}>\n                {time.map((date) => <Option key={date}>{date}</Option>)}\n            </Select>\n          </div>\n          \n\n        </div>\n\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}