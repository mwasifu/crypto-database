{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _coinDetail$data;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data: coinDetail,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = coinDetail === null || coinDetail === void 0 ? void 0 : (_coinDetail$data = coinDetail.data) === null || _coinDetail$data === void 0 ? void 0 : _coinDetail$data.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  if (isFetching) return \"Loading...\";\n  console.log(\"bla abla: \" + coinId);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\",\n            padding: \"1%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: cryptoDetails.iconUrl,\n            style: {\n              margin: \"2%\",\n              height: \"7vh\",\n              width: \"7vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\",\n            padding: \"1%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            style: {\n              fontWeight: \"200\",\n              margin: \"2%\",\n              height: \"7vh\",\n              width: \"7vh\"\n            },\n            children: [cryptoDetails.name, \" (\", cryptoDetails.slug, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"I8hcV24F9sBw71jqZPwxqPU4VFc=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","Avatar","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","coinDetail","isFetching","cryptoDetails","coin","time","console","log","display","gridTemplateColumns","textAlign","padding","iconUrl","margin","height","width","fontWeight","name","slug"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,MAArD;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,YAHF,EAIEC,yBAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,aAPF,EAQEC,cARF,EASEC,mBATF,QAUO,mBAVP;AAWA,SAASC,wBAAT,QAAyC,uBAAzC;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAkBd,UAAxB;AACA,MAAM;AAAEe,EAAAA;AAAF,IAAad,MAAnB;;AAEA,MAAMe,aAAa,GAAG,MAAM;AAAA;;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAarB,SAAS,EAA5B;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAE0B,IAAAA,IAAI,EAAEC,UAAR;AAAoBC,IAAAA;AAApB,MAAmCV,wBAAwB,CAACK,MAAD,CAAjE;AACA,QAAMM,aAAa,GAAGF,UAAH,aAAGA,UAAH,2CAAGA,UAAU,CAAED,IAAf,qDAAG,iBAAkBI,IAAxC;AACA,QAAMC,IAAI,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,IAA7C,CAAb;AAEA,MAAIH,UAAJ,EAAgB,OAAO,YAAP;AAChBI,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeV,MAA3B;AACA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,GAAD;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEW,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,mBAAmB,EAAE;AAAxC,SAAZ;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE,OAAZ;AAAqBC,YAAAA,OAAO,EAAE;AAA9B,WAAZ;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAER,aAAa,CAACS,OAA3B;AAAoC,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE,IAAV;AAAgBC,cAAAA,MAAM,EAAE,KAAxB;AAA+BC,cAAAA,KAAK,EAAE;AAAtC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,KAAK,EAAE;AAACL,YAAAA,SAAS,EAAE,MAAZ;AAAoBC,YAAAA,OAAO,EAAE;AAA7B,WAAZ;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,CAAd;AAAiB,YAAA,KAAK,EAAE;AAAEK,cAAAA,UAAU,EAAE,KAAd;AAAqBH,cAAAA,MAAM,EAAE,IAA7B;AAAmCC,cAAAA,MAAM,EAAE,KAA3C;AAAkDC,cAAAA,KAAK,EAAE;AAAzD,aAAxB;AAAA,uBACGZ,aAAa,CAACc,IADjB,QACyBd,aAAa,CAACe,IADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzBD;;GAAMtB,a;UACepB,S,EAEsBgB,wB;;;KAHrCI,a;AA2BN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data: coinDetail, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = coinDetail?.data?.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  if (isFetching) return \"Loading...\";\n  console.log(\"bla abla: \" + coinId);\n  return (\n    <Col>\n      <Col>\n        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n          <div style={{textAlign: \"right\", padding: \"1%\"}}>\n            <Avatar src={cryptoDetails.iconUrl} style={{ margin: \"2%\", height: \"7vh\", width: \"7vh\"}} />\n          </div>\n          <div style={{textAlign: \"left\", padding: \"1%\" }}>\n            <Title level={2} style={{ fontWeight: \"200\", margin: \"2%\", height: \"7vh\", width: \"7vh\"}}>\n              {cryptoDetails.name} ({cryptoDetails.slug})\n            </Title>\n          </div>\n        </div>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}