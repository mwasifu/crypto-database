{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/LineChart.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Typography } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = _ref => {\n  let {\n    coinHistory,\n    currentPrice,\n    coinName\n  } = _ref;\n  const coinPrice = [];\n  const timeStamps = [];\n\n  for (let i = 0; i < (coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$history = coinHistory.history) === null || _coinHistory$history === void 0 ? void 0 : _coinHistory$history.length); i++) {\n    var _coinHistory$history, _coinHistory$history$;\n\n    coinPrice.push(coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$history$ = coinHistory.history[i]) === null || _coinHistory$history$ === void 0 ? void 0 : _coinHistory$history$.price);\n    timeStamps.push(new Date(coinHistory.history[i].timestamp).toLocaleDateString);\n  }\n\n  const data = {\n    labels: timeStamps,\n    datasets: [{\n      label: \"USD\",\n      data: coinPrice,\n      fill: false,\n      backgroundColor: \"rgba(75,192,192,0.2)\",\n      borderColor: \"rgba(75,192,192,1)\"\n    }]\n  };\n  const options = {\n    scales: {\n      yAxis: [{\n        beginAtZero: true\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        marginTop: \"5%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 3,\n        children: [coinName, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: [\"Daily Change: \", coinHistory === null || coinHistory === void 0 ? void 0 : coinHistory.change]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: [\"Current Price: \", currentPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/LineChart.jsx"],"names":["React","Line","Col","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","timeStamps","i","history","length","push","price","Date","timestamp","toLocaleDateString","data","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxis","beginAtZero","marginTop","change"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,MAAhC;;;;AAEA,MAAMC,SAAS,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,GAA4C;AAC7D,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGL,WAAH,aAAGA,WAAH,+CAAGA,WAAW,CAAEM,OAAhB,yDAAG,qBAAsBC,MAAzB,CAAjB,EAAkDF,CAAC,EAAnD,EAAuD;AAAA;;AACrDF,IAAAA,SAAS,CAACK,IAAV,CAAeR,WAAf,aAAeA,WAAf,gDAAeA,WAAW,CAAEM,OAAb,CAAqBD,CAArB,CAAf,0DAAe,sBAAyBI,KAAxC;AACAL,IAAAA,UAAU,CAACI,IAAX,CACE,IAAIE,IAAJ,CAASV,WAAW,CAACM,OAAZ,CAAoBD,CAApB,EAAuBM,SAAhC,EAA2CC,kBAD7C;AAGD;;AAED,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEV,UADG;AAEXW,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,KADT;AAEEH,MAAAA,IAAI,EAAEV,SAFR;AAGEc,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,eAAe,EAAE,sBAJnB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADQ;AAFC,GAAb;AAaA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,WAAW,EAAE;AADf,OADK;AADD;AADM,GAAhB;AAUA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8BACE,QAAC,UAAD,CAAY,KAAZ;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA,mBAA6BtB,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD,CAAY,KAAZ;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA,qCACiBF,WADjB,aACiBA,WADjB,uBACiBA,WAAW,CAAEyB,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,UAAD,CAAY,KAAZ;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA,sCACkBxB,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEY,IAAZ;AAAkB,QAAA,OAAO,EAAEO;AAA3B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CAjDD;;KAAMrB,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Typography } from \"antd\";\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const timeStamps = [];\n\n  for (let i = 0; i < coinHistory?.history?.length; i++) {\n    coinPrice.push(coinHistory?.history[i]?.price);\n    timeStamps.push(\n      new Date(coinHistory.history[i].timestamp).toLocaleDateString\n    );\n  }\n\n  const data = {\n    labels: timeStamps,\n    datasets: [\n      {\n        label: \"USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      yAxis: [\n        {\n          beginAtZero: true\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Col style={{ marginTop: \"5%\" }}>\n        <Typography.Title level={3}>{coinName} Price Chart</Typography.Title>\n        <Typography.Title level={4}>\n          Daily Change: {coinHistory?.change}\n        </Typography.Title>\n        <Typography.Title level={4}>\n          Current Price: {currentPrice}\n        </Typography.Title>\n        <Line data={data} options={options} />\n      </Col>\n      \n    </>\n  );\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}