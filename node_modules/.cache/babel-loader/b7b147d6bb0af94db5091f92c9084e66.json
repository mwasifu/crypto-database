{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _coinDetail$data, _cryptoDetails$allTim;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data: coinDetail,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = coinDetail === null || coinDetail === void 0 ? void 0 : (_coinDetail$data = coinDetail.data) === null || _coinDetail$data === void 0 ? void 0 : _coinDetail$data.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  const stats = [{\n    title: \"Price to USD\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.price) && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Rank\",\n    value: cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 56\n    }, this)\n  }, {\n    title: \"24h Volume\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.volume) && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Market Cap\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.marketCap) && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"All Time High\",\n    value: `$ ${(cryptoDetails === null || cryptoDetails === void 0 ? void 0 : (_cryptoDetails$allTim = cryptoDetails.allTimeHigh) === null || _cryptoDetails$allTim === void 0 ? void 0 : _cryptoDetails$allTim.price) && millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }]; //   const genericStats = [\n  //     {\n  //       title: \"Number Of Markets\",\n  //       value: cryptoDetails.numberOfMarkets,\n  //       icon: <FundOutlined />,\n  //     },\n  //     {\n  //       title: \"Number Of Exchanges\",\n  //       value: cryptoDetails.numberOfExchanges,\n  //       icon: <MoneyCollectOutlined />,\n  //     },\n  //     {\n  //       title: \"Approved Supply\",\n  //       value: cryptoDetails.approvedSupply ? (\n  //         <CheckOutlined />\n  //       ) : (\n  //         <StopOutlined />\n  //       ),\n  //       icon: <ExclamationCircleOutlined />,\n  //     },\n  //     {\n  //       title: \"Total Supply\",\n  //       value: `$ ${millify(cryptoDetails.totalSupply)}`,\n  //       icon: <ExclamationCircleOutlined />,\n  //     },\n  //     {\n  //       title: \"Circulating Supply\",\n  //       value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n  //       icon: <ExclamationCircleOutlined />,\n  //     }\n  //   ];\n\n  document.querySelector('crp-color').style.backgroundColor = cryptoDetails === null || cryptoDetails === void 0 ? void 0 : cryptoDetails.color;\n  if (isFetching) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(Col, {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: cryptoDetails.iconUrl,\n            style: {\n              margin: \"2%\",\n              height: \"7vh\",\n              width: \"7vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            className: \"crp-color\",\n            style: {\n              fontWeight: \"200\"\n            },\n            children: [cryptoDetails.name, \" (\", cryptoDetails.slug, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {},\n            children: [cryptoDetails.name, \" Live Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"7d\",\n            placeholder: \"Select Time Period\",\n            onChange: value => setTimePeriod(value),\n            style: {\n              marginTop: \"2%\"\n            },\n            children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), stats.map(_ref => {\n          let {\n            icon,\n            title,\n            value\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              alignItems: \"center\",\n              display: \"inline-grid\",\n              padding: \"2%\",\n              paddingTop: \"5%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: \"grey\",\n                  textAlign: \"center\",\n                  fontSize: \"1rem\"\n                },\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"I8hcV24F9sBw71jqZPwxqPU4VFc=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/wasif/Documents/Web Dev/crypto-app/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","Avatar","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","coinDetail","isFetching","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","document","querySelector","style","backgroundColor","color","textAlign","iconUrl","margin","height","width","fontWeight","name","slug","marginTop","map","date","alignItems","display","padding","paddingTop","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data: coinDetail, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = coinDetail?.data?.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${\n        cryptoDetails?.marketCap && millify(cryptoDetails.marketCap)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All Time High\",\n      value: `$ ${\n        cryptoDetails?.allTimeHigh?.price &&\n        millify(cryptoDetails.allTimeHigh.price)\n      }`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  //   const genericStats = [\n  //     {\n  //       title: \"Number Of Markets\",\n  //       value: cryptoDetails.numberOfMarkets,\n  //       icon: <FundOutlined />,\n  //     },\n  //     {\n  //       title: \"Number Of Exchanges\",\n  //       value: cryptoDetails.numberOfExchanges,\n  //       icon: <MoneyCollectOutlined />,\n  //     },\n  //     {\n  //       title: \"Approved Supply\",\n  //       value: cryptoDetails.approvedSupply ? (\n  //         <CheckOutlined />\n  //       ) : (\n  //         <StopOutlined />\n  //       ),\n  //       icon: <ExclamationCircleOutlined />,\n  //     },\n  //     {\n  //       title: \"Total Supply\",\n  //       value: `$ ${millify(cryptoDetails.totalSupply)}`,\n  //       icon: <ExclamationCircleOutlined />,\n  //     },\n  //     {\n  //       title: \"Circulating Supply\",\n  //       value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n  //       icon: <ExclamationCircleOutlined />,\n  //     }\n  //   ];\n\n  document.querySelector('crp-color').style.backgroundColor = cryptoDetails?.color;\n  if (isFetching) return \"Loading...\";\n\n  return (\n    <Col style={{textAlign: 'center'}}>\n      <Col>\n        <div>\n          <div style={{ textAlign: \"center\" }}>\n            <Avatar\n              src={cryptoDetails.iconUrl}\n              style={{ margin: \"2%\", height: \"7vh\", width: \"7vh\" }}\n            />\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <Title level={2} className=\"crp-color\" style={{ fontWeight: \"200\" }}>\n              {cryptoDetails.name} ({cryptoDetails.slug})\n            </Title>\n          </div>\n\n          <div style={{ textAlign: \"center\" }}>\n            <p style={{}}>{cryptoDetails.name} Live Statistics</p>\n            <Select\n              defaultValue=\"7d\"\n              placeholder=\"Select Time Period\"\n              onChange={(value) => setTimePeriod(value)}\n              style={{marginTop: \"2%\"}}\n            >\n              {time.map((date) => (\n                <Option key={date}>{date}</Option>\n              ))}\n            </Select>\n          </div>\n          {stats.map(({ icon, title, value }) => (\n            <div\n              style={{\n                alignItems: \"center\",\n                display: \"inline-grid\",\n                padding: \"2%\",\n                paddingTop: \"5%\"\n              }}\n            >\n              <div>\n                <Text>{icon}</Text>\n                <br />\n                <Text style={{color: \"grey\", textAlign: \"center\", fontSize: \"1rem\"}}>{title}</Text>\n              </div>\n              <div>\n                <Text>{value}</Text>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}